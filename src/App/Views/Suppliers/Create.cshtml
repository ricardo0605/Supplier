@model App.ViewModels.SupplierViewModel

@{
    ViewData["Title"] = "New supplier";
}

<h1 style="padding-top: 50px;">@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DocumentNumber" class="control-label"></label>
                <input asp-for="DocumentNumber" class="form-control" />
                <span asp-validation-for="DocumentNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SupplierType" class="control-label"></label><br />
                <input type="radio" value="1" asp-for="SupplierType" checked /> Person<br />
                <input type="radio" value="2" asp-for="SupplierType" /> Legal person
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>

            <h4>Address</h4>
            <hr />

            <partial name="_Address" />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a class="btn btn-info" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        SearchZipCode();
    </script>
}
